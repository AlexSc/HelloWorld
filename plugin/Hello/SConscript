from Config import *
from Bundle import *

Import('env')
Import('libs')

files = Glob('*.cpp')

TOOL_SUBST(env)

env.Append(CPPPATH=['../inc', '#/lib'], LIBPATH='#/lib')
isLinux = env['PLATFORM'] == 'posix' or env['PLATFORM'] == 'linux'
isOSX = env['PLATFORM'] == 'darwin'
isWindows = env['PLATFORM'] == 'win32'
cppdefines = []
target = 'Hello'
if isLinux or isOSX:
   cppdefines += ["XP_UNIX", 'MDCPUCFG="\\"prcpucfg_unix.h"\\"']
if isOSX:
   cppdefines += ["XP_MACOSX"]
if isWindows:
   cppdefines += ["WIN32", "_WINDOWS", 'MDCPUCFG="\\"prcpucfg_win32.h"\\"']
   f = env.Build('SubstInFile', 'hello.def', 'hello.def.in', copy=False, suffix=False, SUBST_DICT_CFG={'dbg':{'LIBNAME':'NPHELLO_DEBUG'}, 'optdbg': {'LIBNAME':'NPHELLO_OPTIMIZED'}, 'release':{'LIBNAME':'NPHELLO'}})[0]
   files.append(f)
   files += Glob('*.rc')
   target = 'nphello'
   


env.Append(CPPDEFINES=cppdefines)
ret = env.Build('LoadableModule', target, files, LIBS_CFG=libs[1])

TOOL_BUNDLE(env)
if isOSX and False:
   configs = env.subst('${cfg}').split()
   for config in configs:
      config = Config.allConfigs[config]
      env.MakeBundle('Hello' + config.suffix + '.plugin', 'Hello' + config.suffix,
                     'Info.plist',
                     typecode='BRPL', creator='????',
                     resources="English.lproj")

Return('ret')
